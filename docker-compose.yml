services:
  app_blue:
    image: "${BLUE_IMAGE}"
    container_name: app_blue
    environment:
      - PORT=${PORT}
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - APP_POOL=blue
    expose:
      - "${PORT}"
    ports:
      - "8081:${PORT}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${PORT}/healthz || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  app_green:
    image: "${GREEN_IMAGE}"
    container_name: app_green
    environment:
      - PORT=${PORT}
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - APP_POOL=green
    expose:
      - "${PORT}"
    ports:
      - "8082:${PORT}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${PORT}/healthz || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  nginx:
    image: nginx:stable-alpine
    container_name: nginx_gateway
    depends_on:
      - app_blue
      - app_green
    ports:
      - "${PORT}:80"
    environment:
      - ACTIVE_POOL=${ACTIVE_POOL}
      - UPSTREAM_BLUE=app_blue:${PORT}
      - UPSTREAM_GREEN=app_green:${PORT}
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      - ./nginx/docker-entrypoint.sh:/docker-entrypoint.sh:ro
    entrypoint: ["/bin/sh", "/docker-entrypoint.sh"]
    command: ["nginx", "-g", "daemon off;"]
    restart: unless-stopped