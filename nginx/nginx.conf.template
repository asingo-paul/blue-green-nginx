user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Upstream configuration
    upstream backend {
        server ${UPSTREAM_BLUE} max_fails=2 fail_timeout=3s;
        server ${UPSTREAM_GREEN} backup;
    }

    # Log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '"$upstream_addr" "$upstream_http_x_app_pool"';

    access_log /var/log/nginx/access.log main;

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint for nginx itself
        location = /healthz {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }

        # Main proxy configuration
        location / {
            proxy_pass http://backend;
            
            # Preserve original client headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Important: Don't buffer responses to detect failures quickly
            proxy_buffering off;
            
            # Tight timeouts for quick failover detection
            proxy_connect_timeout 2s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            
            # Retry configuration - this is crucial for automatic failover
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 6s;
            
            # Don't interfere with app headers
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
        }

        # Allow direct access to chaos endpoints through nginx
        location ~ ^/chaos/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 2s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }
    }
}